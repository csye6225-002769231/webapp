name: Packer Validity
on: [pull_request]

jobs:
  Run-Packer-Validity-Check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Environment File
        run: |
          touch .env
          echo "DATABASE_PASS=${{secrets.DATABASE_PASS}}" >> .env
          echo "DATABASE=${{secrets.DATABASE}}" >> .env
          echo "DATABASE_USER=${{secrets.DATABASE_USER}}" >> .env
          echo "DATABASE_PORT=${{secrets.DATABASE_PORT}}" >> .env
          echo "DATABASE_HOST=${{secrets.DATABASE_HOST}}" >> .env
          echo "DIALECT=${{secrets.DIALECT}}" >> .env
          echo "DEFAULTUSERSPATH=${{secrets.DEFAULTUSERSPATH}}" >> .env

      - name: Create PG user and connect
        run: |
          # Load environment variables from .env file
          source .env
          
          # Change the user's password using superuser privileges
          sudo -u postgres psql -c "ALTER USER $DATABASE_USER WITH PASSWORD '$DATABASE_PASS';"
          
          # Connect to the 'postgres' database using the specified user and password
          PGPASSWORD=$DATABASE_PASS psql -U $DATABASE_USER -d $DATABASE -h $DATABASE_HOST -p $DATABASE_PORT

      - name: Run Integration Tests
        run: |
          # Load environment variables from .env file
          source .env

          # Run integration tests using environment variables
          npm run test

      - name: Create user.csv
        run: |
          touch user.csv
          echo "${{secrets.USER_CSV}}" >> user.csv

      - name: Artifact Setup
        run: zip -r webapp.zip .

      - name: Install Packer
        run: |
          packer init aws.pkr.hcl

      - name: Packer Validation Check
        id: fmt
        run: |
          set -e
          if ! packer fmt -check aws.pkr.hcl; then
            echo "Template is not formatted correctly. Please run 'packer fmt' locally and push the changes."
            exit 1
          fi

      - name: Packer Validation
        run: |
          packer validate aws.pkr.hcl
        env:
          PKR_VAR_database: ${{secrets.DATABASE}}
          PKR_VAR_database_pass: ${{secrets.DATABASE_PASS}} 
          PKR_VAR_database_user: ${{secrets.DATABASE_USER}}
          PKR_VAR_database_port: ${{secrets.DATABASE_PORT}}
          PKR_VAR_database_host: ${{secrets.DATABASE_HOST}} 
          DIALECT: ${{secrets.DIALECT}} 
          DEFAULTUSERSPATH: ${{secrets.DEFAULTUSERSPATH}} 
          AMI_USER_DEMO: ${{secrets.AMI_USER_DEMO}} 
          PKR_VAR_aws-region: "${{ secrets.AWS_REGION }}"
          PKR_VAR_source-ami: "${{ secrets.SOURCE_AMI }} "
          # PKR_VAR_ssh-username: "${{ secrets.SSH_USERNAME }}"
          PKR_VAR_subnet-id: "${{ secrets.SUBNET_ID }}"


          







      
  
name: Packer Build after Merge

on:
  push:
    branches:
    - main

jobs:
  Run-Packer-Build-Check:
    if: github.repository == 'csye6225-002769231/webapp' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Waiting for integration test
        uses: lewagon/wait-on-check-action@v1.3.1
        with: 
          ref: ${{ github.ref }}
          check-name: 'Run-Integration-test-for-healthz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Create user.csv
        run: |
          touch user.csv
          echo "${{secrets.USER_CSV}}" >> user.csv

      - name: Artifact Setup
        run: zip -r webapp.zip .

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Initialization
        run: |
          packer init aws.pkr.hcl

      - name: Build AMI and Extract AMI ID
        id: build-ami
        run: |
            PACKER_OUTPUT=$(packer build aws.pkr.hcl)
            AMI_ID=$(echo "$PACKER_OUTPUT" | grep -oP 'AMI: \K(ami-[a-zA-Z0-9]+)')
            echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV
            echo "::set-output name=ami_id::$AMI_ID"       
        env:
          AMI_USER_DEMO: ${{ secrets.AMI_USER_DEMO }}
          PKR_VAR_aws-region: ${{ secrets.AWS_REGION }}
          PKR_VAR_source-ami: ${{ secrets.SOURCE_AMI }}
          PKR_VAR_subnet-id: ${{ secrets.SUBNET_ID }}

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.DEMO_ASG_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.DEMO_ASG_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Update Launch Template
        run: |
          aws ec2 create-launch-template-version --launch-template-name ${{secrets.lt_name}} --source-version "\$Default" --launch-template-data "{\"ImageId\":\"${{ env.AMI_ID }}\"}"
      
      - name: Refresh Auto-Scaling Group
        id: refresh_asg
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name ${{secrets.autoScaling_name}} --strategy "Rolling"
